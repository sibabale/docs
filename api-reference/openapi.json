{
  "openapi": "3.1.0",
  "info": {
    "title": "Accounts",
    "description": "API specification for the accounts microservice",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "description": "Returns all accounts from the system",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AccountsResponse"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "description": "Creates a new account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/AccountCreated"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "description": "Returns a single account by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/AccountResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "description": "Updates the owner of an account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "owner": {
                    "type": "string",
                    "description": "The new owner of the account"
                  }
                },
                "required": ["owner"]
              }
            }
          }
        },
      "responses": {
          "200": {
            "$ref": "#/components/responses/AccountClosed"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "description": "Closes an account by updating its status to CLOSED",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to close",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
      "responses": {
          "200": {
            "$ref": "#/components/responses/AccountClosed"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique identifier for the account"
          },
          "owner": {
            "type": "string",
            "description": "The owner of the account"
          },
          "balance": {
            "type": "number",
            "format": "double",
            "description": "The balance of the account"
          },
          "accountNumber": {
            "type": "number",
            "description": "The account number of the account"
          },
          "status": {
            "type": "string",
            "enum": ["ACTIVE", "CLOSED"],
            "description": "The status of the account"
          }
        },
        "required": ["owner"]
      },
      "NewAccount": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "The owner of the account"
          }
        },
        "required": ["owner"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "default": false,
            "description": "Whether the request was successful"
          },
          "error": {
            "type": "string",
            "description": "The error message"
          }
        },
        "required": ["success", "error"]
      }
    },
    "responses": {
      "AccountsResponse": {
        "description": "Successful accounts response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        }
      },
      "AccountResponse": {
        "description": "Successful account response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "AccountCreated": {
        "description": "Account created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "AccountUpdated": {
        "description": "Account owner updated successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "AccountClosed": {
        "description": "Account closed successfully",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized: No token provided",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden: Invalid token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Account not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ServerError": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}